1. How did viewing a diff between two versions of a file help you see the bug 
that was introduced?
Diff helps you to spot the differences between files.
you can see which lines are added and which ones are deleted.


2. How could having easy access to the entire history of a file make you a more 
efficient programmer in the long term?
You can see which errors/bugs you had in your code, how you correct them, the 
different paths to come to a solution to a bug or implementing a feature


3. What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like 
Google docs does?
manual allows to keep a logic/history to the versioning vs automatic it
only allows to define a time step to commits, regardless it is a logical commit
or not


4. Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file 
separately?
git allows to keep track of changes in a repository/project vs in a single file


5. How can you use the commands git log and git diff to view the history of 
files?
with git log you can view the whole flow of work (ie, the history), with git 
diff you can look at differences between specific commits


6. How might using version control make you more confident to make changes 
that could break something?
You can always revert to a previous full working version of your work


7. Now that you have your workspace set up, what do you want to try using Git 
for?
everything!!!
